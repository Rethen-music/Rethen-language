
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'create_barAND APPLY ARTICULATION ARTICULATION_VALUE AUTHOR BAR CLEF CLEF_VALUE COLON_SIGN CREATE DESCRIPTION DYNAMICS DYNAMICS_VALUE EQUALS FOR GREATER GREATER_EQUALS GROUP INDEX ITERATION_NUMBER KEY KEY_VALUE LEFT_CURLY_BRACKET LEFT_SQUARE_BRACKET LINE LOWER LOWER_EQUALS LYRICS NUMBER PIECE QUOTES REPEAT REST RIGHT_CURLY_BRACKET RIGHT_SQUARE_BRACKET SEPARATOR SOUND_DURATION SOUND_NAME STRING TAB TEMPO TIME_SIGNATURE TIME_SIGNATURE_VALUE TITLE\n    sounds_list : LEFT_SQUARE_BRACKET sounds RIGHT_SQUARE_BRACKET\n        | LEFT_SQUARE_BRACKET sounds RIGHT_SQUARE_BRACKET REPEAT ITERATION_NUMBER\n    \n    create_bar :  CREATE BAR COLON_SIGN after_create_bar\n    \n    after_create_bar :  empty\n        | TAB sounds_list\n        | TAB sounds_list after_create_bar\n    \n    tabb : sounds_list\n    \n    sounds : sound\n        | rest\n        | sound SEPARATOR sounds\n        | rest SEPARATOR sounds\n    \n    sound :   LEFT_CURLY_BRACKET expression_for_sound  RIGHT_CURLY_BRACKET\n    \n    rest : LEFT_CURLY_BRACKET expression_for_rest RIGHT_CURLY_BRACKET\n    \n    expression_for_sound : SOUND_NAME additionals_for_sound\n    \n    expression_for_rest : REST additionals_for_rest\n    \n    additionals_for_sound : empty\n        | SEPARATOR SOUND_DURATION additionals_for_sound\n        | SEPARATOR CLEF CLEF_VALUE additionals_for_sound\n        | SEPARATOR ARTICULATION ARTICULATION_VALUE additionals_for_sound\n        | SEPARATOR DYNAMICS DYNAMICS_VALUE additionals_for_sound\n        | SEPARATOR LYRICS EQUALS STRING additionals_for_sound\n        | SEPARATOR DESCRIPTION EQUALS STRING additionals_for_sound\n        | SEPARATOR KEY KEY_VALUE additionals_for_sound\n    \n    additionals_for_rest : empty\n    | SEPARATOR SOUND_DURATION additionals_for_sound\n    | SEPARATOR CLEF CLEF_VALUE additionals_for_sound\n    | SEPARATOR DESCRIPTION EQUALS STRING additionals_for_sound\n    | SEPARATOR KEY KEY_VALUE additionals_for_sound\n    empty :'
    
_lr_action_items = {'CREATE':([0,],[2,]),'$end':([1,4,5,6,8,10,15,33,],[0,-29,-3,-4,-5,-6,-1,-2,]),'BAR':([2,],[3,]),'COLON_SIGN':([3,],[4,]),'TAB':([4,8,15,33,],[7,7,-1,-2,]),'LEFT_SQUARE_BRACKET':([7,],[9,]),'LEFT_CURLY_BRACKET':([9,16,17,],[14,14,14,]),'RIGHT_SQUARE_BRACKET':([11,12,13,23,24,25,26,],[15,-8,-9,-10,-11,-12,-13,]),'SEPARATOR':([12,13,20,21,25,26,34,41,46,47,48,51,53,55,59,60,63,],[16,17,29,32,-12,-13,29,29,29,29,29,29,29,29,29,29,29,]),'SOUND_NAME':([14,],[20,]),'REST':([14,],[21,]),'REPEAT':([15,],[22,]),'RIGHT_CURLY_BRACKET':([18,19,20,21,27,28,30,31,34,41,45,46,47,48,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,],[25,26,-29,-29,-14,-16,-15,-24,-29,-29,-17,-29,-29,-29,-29,-25,-29,-29,-18,-19,-20,-29,-29,-23,-26,-29,-28,-21,-22,-27,]),'ITERATION_NUMBER':([22,],[33,]),'SOUND_DURATION':([29,32,],[34,41,]),'CLEF':([29,32,],[35,42,]),'ARTICULATION':([29,],[36,]),'DYNAMICS':([29,],[37,]),'LYRICS':([29,],[38,]),'DESCRIPTION':([29,32,],[39,43,]),'KEY':([29,32,],[40,44,]),'CLEF_VALUE':([35,42,],[46,53,]),'ARTICULATION_VALUE':([36,],[47,]),'DYNAMICS_VALUE':([37,],[48,]),'EQUALS':([38,39,43,],[49,50,54,]),'KEY_VALUE':([40,44,],[51,55,]),'STRING':([49,50,54,],[59,60,63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'create_bar':([0,],[1,]),'after_create_bar':([4,8,],[5,10,]),'empty':([4,8,20,21,34,41,46,47,48,51,53,55,59,60,63,],[6,6,28,31,28,28,28,28,28,28,28,28,28,28,28,]),'sounds_list':([7,],[8,]),'sounds':([9,16,17,],[11,23,24,]),'sound':([9,16,17,],[12,12,12,]),'rest':([9,16,17,],[13,13,13,]),'expression_for_sound':([14,],[18,]),'expression_for_rest':([14,],[19,]),'additionals_for_sound':([20,34,41,46,47,48,51,53,55,59,60,63,],[27,45,52,56,57,58,61,62,64,65,66,67,]),'additionals_for_rest':([21,],[30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> create_bar","S'",1,None,None,None),
  ('sounds_list -> LEFT_SQUARE_BRACKET sounds RIGHT_SQUARE_BRACKET','sounds_list',3,'p_sounds_list','parser.py',31),
  ('sounds_list -> LEFT_SQUARE_BRACKET sounds RIGHT_SQUARE_BRACKET REPEAT ITERATION_NUMBER','sounds_list',5,'p_sounds_list','parser.py',32),
  ('create_bar -> CREATE BAR COLON_SIGN after_create_bar','create_bar',4,'p_create_bar','parser.py',60),
  ('after_create_bar -> empty','after_create_bar',1,'p_after_create_bar','parser.py',73),
  ('after_create_bar -> TAB sounds_list','after_create_bar',2,'p_after_create_bar','parser.py',74),
  ('after_create_bar -> TAB sounds_list after_create_bar','after_create_bar',3,'p_after_create_bar','parser.py',75),
  ('tabb -> sounds_list','tabb',1,'p_tabb','parser.py',96),
  ('sounds -> sound','sounds',1,'p_sounds','parser.py',103),
  ('sounds -> rest','sounds',1,'p_sounds','parser.py',104),
  ('sounds -> sound SEPARATOR sounds','sounds',3,'p_sounds','parser.py',105),
  ('sounds -> rest SEPARATOR sounds','sounds',3,'p_sounds','parser.py',106),
  ('sound -> LEFT_CURLY_BRACKET expression_for_sound RIGHT_CURLY_BRACKET','sound',3,'p_sound','parser.py',113),
  ('rest -> LEFT_CURLY_BRACKET expression_for_rest RIGHT_CURLY_BRACKET','rest',3,'p_rest','parser.py',120),
  ('expression_for_sound -> SOUND_NAME additionals_for_sound','expression_for_sound',2,'p_expression_for_sound','parser.py',142),
  ('expression_for_rest -> REST additionals_for_rest','expression_for_rest',2,'p_expression_for_rest','parser.py',185),
  ('additionals_for_sound -> empty','additionals_for_sound',1,'p_additionals_for_sound','parser.py',218),
  ('additionals_for_sound -> SEPARATOR SOUND_DURATION additionals_for_sound','additionals_for_sound',3,'p_additionals_for_sound','parser.py',219),
  ('additionals_for_sound -> SEPARATOR CLEF CLEF_VALUE additionals_for_sound','additionals_for_sound',4,'p_additionals_for_sound','parser.py',220),
  ('additionals_for_sound -> SEPARATOR ARTICULATION ARTICULATION_VALUE additionals_for_sound','additionals_for_sound',4,'p_additionals_for_sound','parser.py',221),
  ('additionals_for_sound -> SEPARATOR DYNAMICS DYNAMICS_VALUE additionals_for_sound','additionals_for_sound',4,'p_additionals_for_sound','parser.py',222),
  ('additionals_for_sound -> SEPARATOR LYRICS EQUALS STRING additionals_for_sound','additionals_for_sound',5,'p_additionals_for_sound','parser.py',223),
  ('additionals_for_sound -> SEPARATOR DESCRIPTION EQUALS STRING additionals_for_sound','additionals_for_sound',5,'p_additionals_for_sound','parser.py',224),
  ('additionals_for_sound -> SEPARATOR KEY KEY_VALUE additionals_for_sound','additionals_for_sound',4,'p_additionals_for_sound','parser.py',225),
  ('additionals_for_rest -> empty','additionals_for_rest',1,'p_additionals_for_rest','parser.py',295),
  ('additionals_for_rest -> SEPARATOR SOUND_DURATION additionals_for_sound','additionals_for_rest',3,'p_additionals_for_rest','parser.py',296),
  ('additionals_for_rest -> SEPARATOR CLEF CLEF_VALUE additionals_for_sound','additionals_for_rest',4,'p_additionals_for_rest','parser.py',297),
  ('additionals_for_rest -> SEPARATOR DESCRIPTION EQUALS STRING additionals_for_sound','additionals_for_rest',5,'p_additionals_for_rest','parser.py',298),
  ('additionals_for_rest -> SEPARATOR KEY KEY_VALUE additionals_for_sound','additionals_for_rest',4,'p_additionals_for_rest','parser.py',299),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',304),
]
